module Game.Start exposing (..)

import Html exposing (..)
import Html.Attributes exposing (class, title, type_, placeholder, value, href)
import Html.Events exposing (onClick, onInput, on)
import Msgs exposing (Msg)
import Models exposing (Game, Player, Inventory, Item, Scene, toItems, sceneSets)
import List exposing (head, tail, map)
import Update exposing (findScene)
import Dict exposing (keys)
import Routing exposing (playPath)

view : Game -> Html Msg
view game =
       div []
           [ nav
           , p [] [text game.status]
           , div []
               [ input [ type_ "text", placeholder "Name", onInput (Msgs.ChangeName game)] []
               , select [ onInput (Msgs.ChangeSceneSet game) ]
                     (List.map (\ss -> (option [ value (toString ss) ] [ text (toString ss) ])) (Dict.keys sceneSets))
               , a [ href playPath ] [text "Go!"] ]
           ]

nav : Html Msg
nav =
    div [ class "clearfix mb2 white bg-black" ]
        [ div [ class "left p2" ] [ text "Info" ] ]
